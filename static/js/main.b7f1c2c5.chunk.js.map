{"version":3,"sources":["components/Button/button.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ButtonSize","ButtonType","Button","props","children","disabled","className","size","href","btnType","restProps","classes","classNames","defaultProps","Default","App","Primary","onClick","alert","Danger","Small","Large","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAGYA,EAKAC,E,8FALAD,K,WAAAA,E,YAAAA,M,cAKAC,K,kBAAAA,E,kBAAAA,E,iBAAAA,M,KAiBZ,IAAMC,EAAsC,SAACC,GAAW,IAAD,EAC3CC,EAAqED,EAArEC,SAAUC,EAA2DF,EAA3DE,SAAUC,EAAiDH,EAAjDG,UAAiBC,GAAgCJ,EAAtCK,KAAsCL,EAAhCI,MAAME,EAA0BN,EAA1BM,QAAYC,EADZ,YAC0BP,EAD1B,6DAE7CQ,EAAUC,IAAW,aAAcN,GAAf,wCACPG,GAAYA,GADL,mCAEPF,GAASA,GAFF,cAGtB,WAAYF,GAHU,IAM1B,OACI,gDACIC,UAAWK,EACXN,SAAUA,GACNK,GAHR,aAKI,+BAAON,QAKnBF,EAAOW,aAAe,CAClBR,UAAU,EACVI,QAASR,EAAWa,SAGTZ,Q,YChBAa,MA5Bf,WACI,OACI,qCACI,gCACI,cAAC,EAAD,CAAQN,QAASR,EAAWe,QAASC,QAAS,WAAMC,SAApD,6BACA,cAAC,EAAD,CAAQT,QAASR,EAAWa,QAA5B,6BACA,cAAC,EAAD,CAAQL,QAASR,EAAWa,QAAST,UAAQ,EAA7C,uCACA,cAAC,EAAD,CAAQI,QAASR,EAAWkB,OAA5B,6BACA,cAAC,EAAD,CAAQV,QAASR,EAAWkB,OAAQd,UAAQ,EAA5C,gCAEJ,gCACI,cAAC,EAAD,CAAQE,KAAMP,EAAWoB,MAAOX,QAASR,EAAWe,QAApD,6BACA,cAAC,EAAD,CAAQT,KAAMP,EAAWoB,MAAOX,QAASR,EAAWa,QAApD,6BACA,cAAC,EAAD,CAAQP,KAAMP,EAAWoB,MAAOX,QAASR,EAAWa,QAAST,UAAQ,EAArE,uCACA,cAAC,EAAD,CAAQE,KAAMP,EAAWoB,MAAOX,QAASR,EAAWkB,OAApD,6BACA,cAAC,EAAD,CAAQZ,KAAMP,EAAWoB,MAAOX,QAASR,EAAWkB,OAAQd,UAAQ,EAApE,gCAEJ,gCACI,cAAC,EAAD,CAAQE,KAAMP,EAAWqB,MAAOZ,QAASR,EAAWe,QAApD,6BACA,cAAC,EAAD,CAAQT,KAAMP,EAAWqB,MAAOZ,QAASR,EAAWa,QAApD,6BACA,cAAC,EAAD,CAAQP,KAAMP,EAAWqB,MAAOZ,QAASR,EAAWa,QAAST,UAAQ,EAArE,uCACA,cAAC,EAAD,CAAQE,KAAMP,EAAWqB,MAAOZ,QAASR,EAAWkB,OAApD,6BACA,cAAC,EAAD,CAAQZ,KAAMP,EAAWqB,MAAOZ,QAASR,EAAWkB,OAAQd,UAAQ,EAApE,oCCbDiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7f1c2c5.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nexport enum ButtonSize {\r\n    Large = 'lg',\r\n    Small = 'sm'\r\n}\r\n\r\nexport enum ButtonType {\r\n    Primary = 'primary',\r\n    Default = 'default',\r\n    Danger = 'danger',\r\n}\r\n\r\ninterface BaseButtonProps {\r\n    className?: string;\r\n    disabled?: boolean;\r\n    size?: ButtonSize;\r\n    btnType?: ButtonType;\r\n    children: React.ReactNode;\r\n    href?: string;\r\n}\r\n\r\ntype NativeButtonProps = BaseButtonProps&React.BaseHTMLAttributes<HTMLElement>\r\n\r\nconst Button: React.FC<NativeButtonProps> = (props) => {\r\n    const { children, disabled, className, href, size, btnType, ...restProps } = props;\r\n    const classes = classNames('devops-btn', className, {\r\n        [`devops-btn-${btnType}`]: btnType,\r\n        [`devops-btn-${size}`]: size,\r\n        'disabled': disabled\r\n    })\r\n\r\n    return (\r\n        <button\r\n            className={classes}\r\n            disabled={disabled}\r\n            {...restProps}\r\n        >\r\n            <span>{children}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    disabled: false,\r\n    btnType: ButtonType.Default\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\nimport Button, { ButtonSize, ButtonType } from \"./components/Button/button\";\nimport './styles/index.scss'\nimport './App.css'\n\nfunction App() {\n    return (\n        <>\n            <div>\n                <Button btnType={ButtonType.Primary} onClick={()=> {alert()}}> 注 册 </Button>\n                <Button btnType={ButtonType.Default}> 登 录 </Button>\n                <Button btnType={ButtonType.Default} disabled> 登 录(disabled) </Button>\n                <Button btnType={ButtonType.Danger}> 删 除 </Button>\n                <Button btnType={ButtonType.Danger} disabled> 删 除 </Button>\n            </div>\n            <div>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Primary}> 注 册 </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Default}> 登 录 </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Default} disabled> 登 录(disabled) </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Danger}> 删 除 </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Danger} disabled> 删 除 </Button>\n            </div>\n            <div>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Primary}> 注 册 </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Default}> 登 录 </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Default} disabled> 登 录(disabled) </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Danger}> 删 除 </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Danger} disabled> 删 除 </Button>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}