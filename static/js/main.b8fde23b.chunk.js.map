{"version":3,"sources":["components/Button/button.tsx","components/Kanban/util.js","components/Kanban/kanban.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ButtonSize","ButtonType","Button","props","children","disabled","className","size","href","btnType","restProps","classes","classNames","defaultProps","Default","getKanbanTitle","index","Kanban","records","onIssueClick","onIssueDragEnd","useState","state","setState","useEffect","status1","filter","item","status","status2","status3","status4","onDragEnd","result","source","destination","sInd","droppableId","dInd","issue","droppableSource","droppableDestination","sourceClone","Array","from","destClone","splice","removed","move","newState","map","el","ind","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","length","draggableId","id","draggableProps","dragHandleProps","onClick","title","placeholder","App","Primary","Danger","Small","Large","targetStatus","alert","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8fde23b.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nexport enum ButtonSize {\n    Large = 'lg',\n    Small = 'sm'\n}\n\nexport enum ButtonType {\n    Primary = 'primary',\n    Default = 'default',\n    Danger = 'danger',\n}\n\ninterface BaseButtonProps {\n    className?: string;\n    disabled?: boolean;\n    size?: ButtonSize;\n    btnType?: ButtonType;\n    children: React.ReactNode;\n    href?: string;\n}\n\ntype NativeButtonProps = BaseButtonProps & React.BaseHTMLAttributes<HTMLElement>\n\nconst Button: React.FC<NativeButtonProps> = (props) => {\n    const {children, disabled, className, href, size, btnType, ...restProps} = props;\n    const classes = classNames('devops-btn', className, {\n        [`devops-btn-${btnType}`]: btnType,\n        [`devops-btn-${size}`]: size,\n        'disabled': disabled\n    })\n\n    return (\n        <button\n            className={classes}\n            disabled={disabled}\n            {...restProps}\n        >\n            <span>{children}</span>\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    disabled: false,\n    btnType: ButtonType.Default\n}\n\nexport default Button\n","function getKanbanTitle(index) {\n    switch (index) {\n        case 0:\n            return '未开始';\n        case 1:\n            return '开发中';\n        case 2:\n            return '测试中';\n        case 3:\n            return '已完成';\n    }\n}\n\nexport default getKanbanTitle;","import React, { useEffect, useState } from \"react\";\n// @ts-ignore\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport getKanbanTitle from \"./util\";\n\n/**\n * Moves an item from one list to another list.\n * source: 源数组\n * destination: 目标数组\n * droppableSource: 源拖拽对象\n * droppableDestination: 拖拽处的上面对象\n */\nconst move = (source: Iterable<any> | ArrayLike<any>, destination: Iterable<any> | ArrayLike<any>, droppableSource: { index: number; droppableId: string | number; }, droppableDestination: { index: number; droppableId: string | number; }) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result: any = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nexport interface Issue {\n    id: number,\n    title: string,\n    status: number,\n}\n\nexport interface KanbanProps {\n    onIssueClick?: (issue: Issue) => void;\n    records?: Issue[];\n    onIssueDragEnd?: (issue: Issue, targetStatus: number) => void;\n}\n\n\nconst Kanban: React.FC<KanbanProps> = (props) => {\n    const {records = [], onIssueClick, onIssueDragEnd} = props;\n\n    const [state, setState] = useState<any[]>([[], [], [], []]);\n\n    useEffect(() => {\n        const status1 = records.filter(item => item.status === 1);\n        const status2 = records.filter(item => item.status === 2);\n        const status3 = records.filter(item => item.status === 3);\n        const status4 = records.filter(item => item.status === 4);\n        const backlog = [status1, status2, status3, status4];\n        setState(backlog);\n\n    }, [records]);\n\n    function onDragEnd(result: any) {\n        const {source, destination} = result;\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n        const sInd = +source.droppableId;\n        const dInd = +destination.droppableId;\n\n        const issue = state[sInd][source.index];\n        const targetStatus = dInd + 1;\n        if (onIssueDragEnd) {\n            onIssueDragEnd(issue, targetStatus);\n        }\n\n        if (sInd === dInd) {\n            return;\n        } else {\n            const result = move(state[sInd], state[dInd], source, destination);\n            const newState = [...state];\n            newState[sInd] = result[sInd];\n            newState[dInd] = result[dInd];\n            setState(newState);\n        }\n    }\n\n    return (\n        <div>\n            <div className={'kanban-wrapper'}>\n                <div className={'column-container'}>\n                    <div className={'column-wrapper'}>\n                        <DragDropContext onDragEnd={onDragEnd}>\n                            {state.map((el, ind) => (\n                                <Droppable key={ind} droppableId={`${ind}`}>\n                                    {(provided: any, snapshot: any) => (\n                                        <div\n                                            className={'column'}\n                                            ref={provided.innerRef}\n                                            {...provided.droppableProps}\n                                        >\n                                            {\n                                                snapshot.isDraggingOver &&\n                                                <div className={'mask'}>\n                                                    <span>{getKanbanTitle(ind)}</span>\n                                                </div>\n                                            }\n                                            <div className={'column-header'}>\n                                                <div className=\"title\">{getKanbanTitle(ind)}</div>\n                                                <div className={'num-tag'}>{el.length}</div>\n                                            </div>\n                                            <div className={'items'}>\n                                                {el.map((item: Issue, index: number) => (\n                                                    <Draggable\n                                                        key={`${item.id}`}\n                                                        draggableId={`${item.id}`}\n                                                        index={index}\n                                                    >\n                                                        {(provided: any, snapshot: any) => (\n                                                            <div\n                                                                className={'card'}\n                                                                ref={provided.innerRef}\n                                                                {...provided.draggableProps}\n                                                                {...provided.dragHandleProps}\n                                                            >\n                                                                <div className={'header'} onClick={() => {\n                                                                    onIssueClick && onIssueClick(item)\n                                                                }}>\n                                                                    <div className={'title'}>{item.title}</div>\n                                                                    {/* 预留做标签的section*/}\n                                                                    {/*<div className=\"label-section\">*/}\n                                                                    {/*    /!*const shortName = !isEmpty(name) ? name.substring(0,2) : '';*!/*/}\n                                                                    {/*    {item.deadline &&*/}\n                                                                    {/*    <span className={'date-label'}>xxx截止</span>}*/}\n                                                                    {/*</div>*/}\n                                                                    <div className={'footer'}>\n                                                                        {/*<div className={'left'}>*/}\n                                                                        {/*    <img src={switchIssueType(item.issueType)}/>*/}\n                                                                        {/*    <span className={'id'}>#{item.id}</span>*/}\n                                                                        {/*    {item.repoId &&*/}\n                                                                        {/*    <>*/}\n                                                                        {/*        <img*/}\n                                                                        {/*            style={{ marginLeft: '16px' }}*/}\n                                                                        {/*            width={14} height={14}*/}\n                                                                        {/*            src={require('./../assets/branch.svg')}*/}\n                                                                        {/*        />*/}\n                                                                        {/*        <span>{item.repoBranch}</span>*/}\n                                                                        {/*    </>}*/}\n                                                                        {/*</div>*/}\n                                                                        {/*<div className={'right'}>*/}\n                                                                        {/*    <div className={'priority'}>{switchPriority(item.priority)}</div>*/}\n                                                                        {/*    <div>{switchStatusType(item.status)}</div>*/}\n                                                                        {/*</div>*/}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        )}\n                                                    </Draggable>\n                                                ))}\n                                            </div>\n                                            {provided.placeholder}\n                                        </div>\n                                    )}\n                                </Droppable>\n                            ))}\n                        </DragDropContext>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Kanban\n","import React from 'react';\nimport Button, { ButtonSize, ButtonType } from \"./components/Button/button\";\nimport './styles/index.scss'\nimport './App.css'\nimport Kanban, { Issue } from \"./components/Kanban/kanban\";\nimport { stringify } from \"querystring\";\n\nfunction App() {\n    return (\n        <>\n            <div>\n                <Button btnType={ButtonType.Primary}> 注 册 </Button>\n                <Button btnType={ButtonType.Default}> 登 录 </Button>\n                <Button btnType={ButtonType.Default} disabled> 登 录(disabled) </Button>\n                <Button btnType={ButtonType.Danger}> 删 除 </Button>\n                <Button btnType={ButtonType.Danger} disabled> 删 除 </Button>\n            </div>\n            <div>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Primary}> 注 册 </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Default}> 登 录 </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Default} disabled> 登 录(disabled) </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Danger}> 删 除 </Button>\n                <Button size={ButtonSize.Small} btnType={ButtonType.Danger} disabled> 删 除 </Button>\n            </div>\n            <div>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Primary}> 注 册 </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Default}> 登 录 </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Default} disabled> 登 录(disabled) </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Danger}> 删 除 </Button>\n                <Button size={ButtonSize.Large} btnType={ButtonType.Danger} disabled> 删 除 </Button>\n            </div>\n            <div>\n                <Kanban\n                    records={[\n                        {\n                            id: 1,\n                            title: 'test',\n                            status: 1\n                        }\n                    ]}\n                    onIssueDragEnd={(issue, targetStatus) => {\n                        alert(`Issue ${JSON.stringify(issue)} 被拖放至 ${targetStatus}`);\n                    }}\n                    onIssueClick={(issue) => {\n                        alert(`Issue ${JSON.stringify(issue)} 被点击`);\n                    }}\n                />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}